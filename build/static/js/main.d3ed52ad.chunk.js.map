{"version":3,"sources":["logo.svg","components/Marker.js","components/AFrameRenderer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Marker","shouldUseCustomMarker","markerProps","undefined","preset","url","patternUrl","renderUsingMatrixMode","props","_this","parameters","context","inherent","react_default","a","createElement","children","this","Component","defaultProps","contextTypes","PropTypes","bool","PARAMETERS","AFrameRenderer","container","document","body","renderer","componentWillUnmount","dispose","passSceneRef","getSceneRef","ref","renderVirtualComponent","component","ReactDOM","createPortal","inherentMode","value","prepareToolKitParams","toolKitParams","Object","keys","forEach","param","includes","concat","flush","arToolKit","rest","objectWithoutProperties","assign","sceneRef","embedded","arjs","childContextTypes","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handlePan","e","_this$state","state","objX","objY","objZ","startX","startY","startZ","type","setState","deltaX","deltaY","handlePinch","scale","startScale","handleRotate","app","querySelector","hammer","Hammer","get","set","enable","direction","DIRECTION_ALL","on","_this$state2","className","id","AFrameRenderer_AFrameRenderer","Marker_Marker","color","material","position","text","wrap-count","Boolean","window","location","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3ed52ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Renders an object under a marker with a preset or a patternUrl\r\nexport default class Marker extends Component {\r\n  static propTypes = {\r\n    parameters: PropTypes.shape({\r\n      type: PropTypes.string,\r\n      size: PropTypes.number,\r\n      patternUrl: PropTypes.string,\r\n      url: PropTypes.string,\r\n      barcodeValue: PropTypes.number,\r\n      changeMatrixMode: PropTypes.string,\r\n      minConfidence: PropTypes.number,\r\n      preset: PropTypes.string,\r\n      markerhelpers: PropTypes.bool,\r\n      \"hit-testing-enabled\": PropTypes.bool,\r\n      \"hit-testing-renderDebug\": PropTypes.bool\r\n    })\r\n  };\r\n\r\n  static defaultProps = {\r\n    // arjs component already has a mapping to default parameters,\r\n    parameters: {}\r\n  };\r\n\r\n  static contextTypes = {\r\n    inherent: PropTypes.bool\r\n  };\r\n\r\n  // Render using a custom marker\r\n  shouldUseCustomMarker = markerProps => {\r\n    if (markerProps !== undefined && markerProps.preset === \"custom\") {\r\n      markerProps.url = markerProps.patternUrl;\r\n      // We don't need patternUrl anymore when dealing with custom markers, so goodbye!\r\n      delete markerProps.patternUrl;\r\n      return markerProps;\r\n    }\r\n  };\r\n\r\n  renderUsingMatrixMode = props => {\r\n    // Check if the component is using a custom marker\r\n    this.shouldUseCustomMarker(props.parameters);\r\n\r\n    // Track the marker movement and use modelViewMatrix\r\n    if (this.context.inherent) {\r\n      return <a-marker {...props.parameters}>{props.children}</a-marker>;\r\n    } else {\r\n      // Track the movement of the camera and use cameraTransformMatrix\r\n      // Uses cameraTransformMatrix as matrix mode for tracking the movement of the camera instead of the object\r\n      return (\r\n        <a-marker-camera {...props.parameters}>\r\n          {props.children}\r\n        </a-marker-camera>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.renderUsingMatrixMode(this.props);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PARAMETERS = [\r\n  // Core config\r\n  \"detectionMode\",\r\n  \"matrixCodeType\",\r\n  \"cameraParametersUrl\",\r\n  \"maxDetectionRate\",\r\n\r\n  // Source configuration\r\n  \"sourceType\",\r\n  \"sourceUrl\",\r\n  \"sourceWidth\",\r\n  \"sourceHeight\",\r\n\r\n  // Canvas dimensions\r\n  \"displayHeight\",\r\n  \"displayWidth\",\r\n  \"canvasWidth\",\r\n  \"canvasHeight\",\r\n\r\n  // Tracking module ['tango', 'artoolkit', 'best']\r\n  \"trackingMethod\",\r\n  \"areaLearningButton\",\r\n  \"performanceProfile\",\r\n  \"tangoPointCloudEnabled\",\r\n  \"debugUIEnabled\"\r\n];\r\n\r\n/**\r\n * AFrameRenderer\r\n * \r\n * Render aframe.io primitives using a single marker\r\n * \r\n * Use multiple markers (independent) and render different objects\r\n * \r\n * Use camera as an entity or use cameraTransformMatrix (camera movement)\r\n *  \r\n * Can also render aframe.io bindings for React (WebVR) \r\n *\r\n * Bugs/Errors to patch:\r\n * \r\n * AR.js gives this error 'THREEx.ArMarkerControls: 'markersAreaEnabled' is not a property of this material.'\r\n * \r\n * Why ?\r\n * - Composition\r\n * - DRY code\r\n * - Abstraction over artoolkit\r\n */\r\nexport default class AFrameRenderer extends Component {\r\n  container = document.body;\r\n  renderer = null;\r\n\r\n  static propTypes = {\r\n    arToolKit: PropTypes.shape({\r\n      sourceType: PropTypes.string,\r\n      sourceUrl: PropTypes.string,\r\n      debugUIEnabled: PropTypes.bool,\r\n      detectionMode: PropTypes.string,\r\n      matrixCodeType: PropTypes.string,\r\n      cameraParametersUrl: PropTypes.string,\r\n      maxDetectionRate: PropTypes.number,\r\n      sourceWidth: PropTypes.number,\r\n      sourceHeight: PropTypes.number,\r\n      displayWidth: PropTypes.number,\r\n      displayHeight: PropTypes.number,\r\n      canvasWidth: PropTypes.number,\r\n      canvasHeight: PropTypes.number\r\n    }),\r\n    getSceneRef: PropTypes.func,\r\n    inherent: PropTypes.bool\r\n  };\r\n\r\n  static defaultProps = {\r\n    arToolKit: {},\r\n    getSceneRef: () => {}, // No ref\r\n    inherent: true // use modelViewMatrix\r\n  };\r\n\r\n  static childContextTypes = {\r\n    inherent: PropTypes.bool\r\n  };\r\n\r\n  // This prop is used by the <Marker /> component to decide whether to use modelViewMatrix or cameraTransformMatrix\r\n  getChildContext() {\r\n    return {\r\n      inherent: this.props.inherent\r\n    };\r\n  }\r\n\r\n  // Clear the rendering context\r\n  // Fallback if <a-scene /> primitive fails to dispose the renderer\r\n  componentWillUnmount = () => {\r\n    this.renderer && this.renderer.dispose();\r\n  };\r\n\r\n  // Pass <a-scene /> reference as a prop. Useful for usage with aframe.io APIs\r\n  passSceneRef = (getSceneRef, ref) => getSceneRef(ref) || ref;\r\n\r\n  // We need to render the <a-scene> outside the parent container\r\n  // because arjs adds the image (sourceType) outside the parent container\r\n  // and the tracking module cannot track the position of the marker lying outside its context\r\n\r\n  // Alternate will be to change this behavior in arjs's aframe fork but\r\n  // its not convenient at all because it may break their internals (AR.js, aframe fork and threex.artoolkit)\r\n  renderVirtualComponent = component =>\r\n    ReactDOM.createPortal(component, this.container);\r\n\r\n  // Use a basic marker component and a camera entity (modelViewMatrix)\r\n  // Determines what user sees. There are no mappings for props on this component i.e userheight: 0\r\n  // The camera is static and its present in negative z-axis\r\n  // static at (0, 0, 0)\r\n  inherentMode = value => (value ? <a-camera-static /> : null);\r\n\r\n  // arjs toolkit parameters (these mappings are already validated in arjs)\r\n  prepareToolKitParams = parameters => {\r\n    let toolKitParams = \"\";\r\n\r\n    Object.keys(parameters).forEach(param => {\r\n      if (PARAMETERS.includes(param)) {\r\n        toolKitParams += `${param}: ${parameters[param]};`;\r\n      }\r\n    });\r\n\r\n    return toolKitParams;\r\n  };\r\n\r\n  // Flush the output\r\n  flush = props => {\r\n    const { arToolKit, children, getSceneRef, inherent, ...rest } = props;\r\n\r\n    return this.renderVirtualComponent(\r\n      <a-scene\r\n        // Forward the scene reference as it is useful in VR enter and exit events\r\n        // where this ref node can be use to add or remove content\r\n        ref={sceneRef =>\r\n          this.passSceneRef(getSceneRef, sceneRef) &&\r\n          (this.renderer = sceneRef)}\r\n        // Remove full screen props from the canvas\r\n        embedded\r\n        // Custom component registered by arjs\r\n        arjs={this.prepareToolKitParams(arToolKit)}\r\n        // Inject the rest of the component props\r\n        {...rest}\r\n      >\r\n        {children}\r\n        {this.inherentMode(inherent)}\r\n      </a-scene>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    // Renderless! (we currently use portals to render in body and not in parent container)\r\n    return this.flush(this.props);\r\n  }\r\n}\r\n","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Box, Sphere, Cylinder, Plane, Sky, Text, Scene} from 'react-aframe-ar'\nimport Marker from './components/Marker.js'\nimport AFrameRenderer from './components/AFrameRenderer.js'\nimport { Entity } from \"aframe-react\"\nimport Hammer from 'hammerjs'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      startX: 0,\n      startZ: 0,\n      startY: 0,\n      objX: 0,\n      objY: 0,\n      objZ: 0,\n      startScale: 0.4,\n      scale: 0.7\n    }\n  }\n  componentDidMount() {\n    const app = document.querySelector('a-scene')\n    this.hammer = new Hammer(app)\n    this.hammer.get('pinch').set({ enable: true });\n    this.hammer.get('rotate').set({ enable: true });\n    this.hammer.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n\n    this.hammer.on('panstart', this.handlePan);\n\n    this.hammer.on('panmove', this.handlePan);\n\n    this.hammer.on('pinchstart', this.handlePinch);\n\n    this.hammer.on('pinch', this.handlePinch);\n\n    this.hammer.on('rotatestart', this.handleRotate);\n\n    this.hammer.on('rotatemove', this.handleRotate);\n  }\n  handlePan = e => {\n    const { objX, objY, objZ, startX, startY, startZ } = this.state\n    if ( e.type === 'panstart') {\n      // console.log('start')\n      this.setState({\n        startX: objX,\n        startY: objY,\n        startZ: objZ\n      })\n    }\n    this.setState({\n      objX: this.state.startX + e.deltaX/150,\n      // objZ: startZ + e.deltaZ/200,\n      objY: this.state.startY + e.deltaY/150,\n    })\n    // console.log('handlepan: ', e.deltaX)\n  }\n  handlePinch = e => {\n    const {scale} = this.state\n    if ( e.type === 'pinchstart' ) {\n      this.setState({\n        startScale: scale\n      })\n    }\n    this.setState({\n      scale: this.state.startScale*e.scale\n    })\n    // console.log('handlepinch')\n  }\n  handleRotate = () => {\n    // console.log('handleRotate')\n  }\n  render() {\n    const { objX, objY, objZ, startX, startY, startZ, scale } = this.state\n    return (\n      <div \n        className=\"App\"\n        id=\"app\"\n      >\n        <AFrameRenderer \n          inherent={true}\n          // arToolKit={{\n          //   width: 100,\n          //   height: 100\n          // }}\n          >\n          <Marker parameters={{ preset: 'hiro' }}>\n            <a-box \n              color='pink' \n              material='opacity: 1;' \n              position={`${objX} ${objZ} ${objY}`} \n              scale={`${scale} ${scale} ${scale}`}>\n              {/* <a-animation attribute=\"rotation\" to=\"360 0 0\" dur=\"5000\" easing=\"linear\" repeat=\"indefinite\" /> */}\n            </a-box>\n            <a-text\n                className=\"text-info\"\n                position={`${objX} ${objZ+0.5} ${objY}`} \n                text=\"value: Hello World; font-size: 50px; color: black; text-align: center\" wrap-count=\"100\"></a-text>\n            {/* <a-cylinder position={`${objX} ${objZ} ${objY}`} color=\"crimson\" height=\"1\" radius=\"0.15\"></a-cylinder> */}\n          </Marker>\n            \n        </AFrameRenderer>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}